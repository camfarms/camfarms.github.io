<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal</title>
    <link>/</link>
    <description>Recent content on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Oct 2021 14:42:06 -0400</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>casePlace</title>
      <link>/myportfolio/schoolwork/caseplace/</link>
      <pubDate>Sun, 17 Oct 2021 13:31:50 -0400</pubDate>
      
      <guid>/myportfolio/schoolwork/caseplace/</guid>
      <description>Intro Here is a link to our website!
CasePlace is oriented towards prospective and current students of Case Western Reserve University (CWRU) as well as any parents or guests visiting the campus. Its purpose is to make our urban campus easier to navigate by offering an interactive GoogleMap interface with pre-loaded points of interest.
CasePlace is a web application that 5 peers and myself worked together to create for our Senior Project.</description>
      <content>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Here is a &lt;a href=&#34;https://case-place-5t56t.ondigitalocean.app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;link&lt;/a&gt;
 to our website!&lt;/p&gt;
&lt;p&gt;CasePlace is oriented towards prospective and current students of Case Western Reserve University (CWRU) as well as any parents or guests visiting the campus. Its purpose is to make our urban campus easier to navigate by offering an interactive GoogleMap interface with pre-loaded points of interest.&lt;/p&gt;
&lt;p&gt;CasePlace is a web application that 5 peers and myself worked together to create for our Senior Project. We built this application using React (so it even works on mobile) and it utilizes the GoogleMaps API to make an interactive map of our university&amp;rsquo;s campus! It was inspired by an &lt;a href=&#34;https://webapps.case.edu/map/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;existing web-page that CWRU has linked&lt;/a&gt;
 on their home website that we thought was too clunky and cluttered for people who are new to the campus.&lt;/p&gt;
&lt;p&gt;We believe CasePlace is an improvement over this webpage due to the sorting functionality it offers. Newcomers to our campus are unlikely to know the names of buildings, or what they are even looking for. CasePlace simplifies this by allowing them to filter and sort the pinned locations into administrative buildings, restaurants, bus stops, etc.&lt;/p&gt;
&lt;h2 id=&#34;design&#34;&gt;Design&lt;/h2&gt;
&lt;p&gt;For the design phase, we spent a lot of time working on wireframes in order to make sure we knew exactly what we wanted before starting program. For the purposes of wireframing we used Figma, which is like the Google Docs of wireframing. Here is an example of our very early drafts!&lt;/p&gt;

  &lt;img src=&#34;/img/casePlace/earlyWireframe.png&#34;  class=&#34;left&#34;  /&gt;

&lt;p&gt;Once we had decided on a general layout, we began to focus more on the style and feel of our application. We thought it would be fitting to make our website match &lt;a href=&#34;https://case.edu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CWRU&amp;rsquo;s professional websites&lt;/a&gt;
 for continuity purposes as these websites all share the same audience. In order to emulate CWRU&amp;rsquo;s websites, we started by using their same color palette and fonts. We then moved on to making our CSS emulate features across CWRU&amp;rsquo;s websites for buttons, modals, dropdowns, etc. Here is one of our later design drafts!&lt;/p&gt;

  &lt;img src=&#34;/img/casePlace/hiResWireframe.png&#34;  class=&#34;left&#34;  /&gt;

&lt;p&gt;Using CWRU&amp;rsquo;s map page as a model, we took our ideas from the design phase and got to work to make it happen. Here is a side by side comparison &amp;ndash; decide for yourself whether or not we matched CWRU&amp;rsquo;s feel.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CasePlace&lt;/th&gt;
&lt;th&gt;CWRU&amp;rsquo;s Page&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
  &lt;img src=&#34;/img/casePlace/casePlace.png&#34;  class=&#34;left&#34;  /&gt;
&lt;/td&gt;
&lt;td&gt;
  &lt;img src=&#34;/img/casePlace/caseWebApp.png&#34;  class=&#34;left&#34;  /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;technology&#34;&gt;Technology&lt;/h2&gt;
&lt;p&gt;For this project we used a variety of different languages and applications.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Framework: React (with CSS and HTML)&lt;/li&gt;
&lt;li&gt;Version Control: Git&lt;/li&gt;
&lt;li&gt;Ticketing System: Jira&lt;/li&gt;
&lt;li&gt;Design Tool: Figma&lt;/li&gt;
&lt;li&gt;Server Host: Digital Ocean&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Luckily for us, we were able to use Jira, Figma, and Digital Ocean for &lt;em&gt;FREE&lt;/em&gt; due to all of us being students!&lt;/p&gt;
&lt;p&gt;This was my first time using React and I really enjoyed using it. It strikes me as a (maybe a little &lt;em&gt;too&lt;/em&gt;) robust, but powerful framework. I&amp;rsquo;m no expert, but I think you could make just about any web-app you want using React.&lt;/p&gt;
&lt;h2 id=&#34;group-organization&#34;&gt;Group Organization&lt;/h2&gt;
&lt;p&gt;Since this was a multi-month long project, it was super important to us as a group that we stayed on top of our work and made steady progress throughout the semester. In order to adhere to this, we elected one of our members, Elias, as project manager for the semester. Elias was the perfect candidate since he had just worked as a project management intern for Google the previous Summer!&lt;/p&gt;
&lt;p&gt;We started the semester by planning out our sprints and setting dates for certain deadlines. For instance, we allotted 1 week for setting up our environments, 3 weeks for design, and 2 weeks for debugging. We also all agreed to meet with one another twice a week to hold &amp;ldquo;scrum&amp;rdquo; meetings in which we would discuss the status of our project and what we were all working on.&lt;/p&gt;
&lt;p&gt;Elias made is super easy for all us to keep track of our tasks due to his familiarity with Jira. For each sprint, he would make a new story and break it into sub-tasks to be distributed amongst us in the group. As a result of how organized we were, we ended up ahead of schedule by the end of the semester while many groups were cramming to get their projects working.&lt;/p&gt;
&lt;h2 id=&#34;personal-accomplishments&#34;&gt;Personal Accomplishments&lt;/h2&gt;
&lt;p&gt;Fortunately, I worked with 5 amazing people and didn&amp;rsquo;t have to deal with people not pulling their own weight. We were an extremely cohesive group who were all committed to working on this project as if it were a professional task for a client rather than a professor.&lt;/p&gt;
&lt;p&gt;I personally worked on almost all aspects of the project, but I am especially proud of what I managed to accomplish during the design phase. While using Figma, I had the realization that I really enjoyed the challenge of designing a page that was both intuitive AND aesthetic. This pushed me to take the lead on a number of things during the design phase, such as the CSS used for our components.&lt;/p&gt;
&lt;p&gt;During the development phase I worked on both the front-end and back-end. For instance, one of my subtasks was to implement the tooltips that open when a user clicks on one of the pins on our map. This required me to write logic for an action handler in JSX that would trigger a new HTML component to appear that I styled in CSS.&lt;/p&gt;

  &lt;img src=&#34;/img/casePlace/tooltip.png&#34;  class=&#34;left&#34;  /&gt;

&lt;p&gt;&amp;hellip; You do not want to know how long I spent trying to get the tooltip to have that tiny little triangle at the top!&lt;/p&gt;
&lt;h2 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h2&gt;
&lt;p&gt;The success of our project was entirely due to our organization. From working on CasePlace I learned how valuable an agile development cycle can be, and how the structure it offers helps everyone on the team stay on task. Furthermore, without a good project manager and a clear division of labor (i.e. Jira) it would have been much, &lt;em&gt;much&lt;/em&gt; more difficult for us to work together effectively.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>passwordManager</title>
      <link>/myportfolio/petprojects/passwordmanager/</link>
      <pubDate>Wed, 13 Oct 2021 14:14:04 -0400</pubDate>
      
      <guid>/myportfolio/petprojects/passwordmanager/</guid>
      <description>Intro After learning about the risks of reusing passwords I realized that I was in trouble. For the sake of convenience, I used to use one of a handful of passwords for all of my account logins (who the heck can remember a unique password for every single login!?) which makes me particularly susceptible to hacks. A big wakeup call for me was the LinkedIn hack in which thousands of users had their username and passwords stolen.</description>
      <content>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;After learning about the &lt;a href=&#34;https://privacysavvy.com/password/guides/reusing-passwords/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;risks of reusing passwords&lt;/a&gt;
 I realized that I was in trouble. For the sake of convenience, I used to use one of a handful of passwords for all of my account logins (who the heck can remember a unique password for every single login!?) which makes me particularly susceptible to hacks. A big wakeup call for me was the &lt;a href=&#34;https://www.forbes.com/sites/leemathews/2021/06/29/details-on-700-million-linkedin-users-for-sale-on-notorious-hacking-forum/?sh=6c337b3234a4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LinkedIn hack&lt;/a&gt;
 in which thousands of users had their username and passwords stolen. I had no way of knowing whether my information had been compromised or not, but if it had someone could see my LinkedIn password and use that to access another dozen of my accounts!&lt;/p&gt;
&lt;p&gt;This freaked me out and spurred me to take action. I decided that it was time I come up with a way of safely storing my login information, and I started work on my own password manager.&lt;/p&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;p&gt;Check out the source code on my &lt;a href=&#34;https://github.com/camfarms/SecureLoginPHP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt;
!&lt;/p&gt;
&lt;h3 id=&#34;demo&#34;&gt;Demo&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Check out my demo on my YouTube channel

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/6MwuE5ZzHd8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;the-method&#34;&gt;The Method&lt;/h2&gt;
&lt;p&gt;When starting this project my two main considerations were &lt;strong&gt;convenience and security&lt;/strong&gt;. How could I protect my login profiles from prying eyes, while still making it easily accessible? After some brainstorming, I decided that I wanted to keep all of my passwords locally on my machine for ease-of-access, but didn&amp;rsquo;t want them stored in plain text in case anyone got into my computer and could read my files.&lt;/p&gt;
&lt;p&gt;In order to make this possible, I needed some way to &lt;strong&gt;encrypt&lt;/strong&gt; my login information before saving it locally.&lt;/p&gt;
&lt;h3 id=&#34;encryption&#34;&gt;Encryption&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;I didn&amp;rsquo;t know much about encryption, so I started doing some research and found a method that would serve my purposes. I won&amp;rsquo;t go too deeply into detail on the encryption, but here&amp;rsquo;s the gist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Given a &lt;strong&gt;key&lt;/strong&gt;, the algorithm will encode a given string, converting it into a long nonsense-looking sequence of characters called a &lt;strong&gt;cipher text&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Any &lt;strong&gt;cipher text&lt;/strong&gt; generated by this algorithm can be decoded and converted back to the original string as long as the same &lt;strong&gt;key&lt;/strong&gt; is provided to do the decoding.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;the-interface&#34;&gt;The Interface&lt;/h2&gt;
&lt;p&gt;Once I had determined my method of security I got to work on making a convenient implementation. For the sake of simplicity, I decided to make my password manager a script that I could run from terminal. At the time, I had been using PHP for one of my classes and decided it was the language for the job.&lt;/p&gt;
&lt;p&gt;To use my terminal based password manager, you must first enter a &lt;strong&gt;cryptographic key&lt;/strong&gt;. From then on, that cryptographic key is used for all encoding/decoding for the rest of the session. You are able to navigate through the different menus of the script by entering commands into the command line. Here&amp;rsquo;s what it looks like when you first start it up:

  &lt;img src=&#34;/img/passManager/passManagerUsage.png&#34;  class=&#34;left&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;the-code&#34;&gt;The Code&lt;/h2&gt;
&lt;p&gt;Here is the code behind that beautiful starting menu:



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;php&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Script&amp;rsquo;s usage menu&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-php&#34; &gt;&lt;code&gt;
function usage(){
	echo &amp;#34;\033[92mUsage: Type a command below to begin
		exit   ........................................  exit this script
		list   ........................................  list all saved login profiles
		add, [OPTIONAL NAME] ..........................  create a new profile, and save its encrypted login information		
		del, [OPTIONAL NAME] ..........................  delete an existing password
		look,  [OPTIONAL NAME] ........................  lookup the plaintext username and password of a profile
		update, [OPTIONAL NAME] .......................  update a profile&amp;#39;s name, and plaintext username and password
			\033[39m\n\n&amp;#34;;
}
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;The script works by continually waiting for input commands. Each valid command (i.e. exit, list, etc.) has its own PHP class that implements an interface called &lt;strong&gt;Command&lt;/strong&gt;.
Here is the command interface, and the &lt;strong&gt;$exit&lt;/strong&gt; class overwriting the interface&amp;rsquo;s functions:



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;2&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;2&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;php&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Command interface and $exit class&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-php&#34; &gt;&lt;code&gt;
interface Command{
	public function execute($args);
	public function isValid($args);
	public function help();
	public function error();
}

$exit = new class implements Command{
	public function execute($args){
		global $handle;
		echo &amp;#34;Exiting...&amp;#34;;
		fclose($handle);
		exit;
	}

	public function isValid($args){
		return count($args) == 1;
	}

	public function help(){
		echo &amp;#34;exit - exits the program. Accepts no arguments\n&amp;#34;;
	}

	public function error(){
		echo &amp;#34;\033[91mERROR: Invalid exit command syntax\n&amp;#34;;
		echo &amp;#34;\033[39m&amp;#34;;
	}
};
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Once a string is entered by the user, it is first checked to make sure it is a valid command. If it is, the class &lt;strong&gt;execute($args)&lt;/strong&gt; function for that command is called. Here is the input loop:



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;3&#34; type=&#34;checkbox&#34; checked /&gt;
    &lt;label for=&#34;3&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;php&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Input loop&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-php&#34; &gt;&lt;code&gt;
//Map of acceptable commands 
$commands = array(&amp;#34;exit&amp;#34; =&amp;gt; $exit, &amp;#34;list&amp;#34; =&amp;gt; $list, &amp;#34;add&amp;#34; =&amp;gt; $add, &amp;#34;del&amp;#34; =&amp;gt; $del, &amp;#34;look&amp;#34; =&amp;gt; $look, &amp;#34;update&amp;#34; =&amp;gt; $update);

//Open standard in
$handle = fopen (&amp;#34;php://stdin&amp;#34;,&amp;#34;r&amp;#34;);
echo &amp;#34;Enter cryptographic key to encode and decode passwords:\n&amp;#34;;
$key = trim(fgets($handle));
usage();

//user input loop
while(true){
	$in = trim(fgets($handle));
	$args = explode(&amp;#39;,&amp;#39;, $in);
	$command = $args[0];

	if (in_array($command, array_keys($commands))) {
		if($commands[$command]-&amp;gt;isValid($args)){
			$commands[$command]-&amp;gt;execute($args);
		}
		else{
			$commands[$command]-&amp;gt; error();
			$commands[$command]-&amp;gt;help();
			mainmenu();

		}
	}	
	else{
		echo &amp;#34;\033[91mERROR: Not a valid command.\n&amp;#34;;
		mainmenu();
	}
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;

&lt;/p&gt;
&lt;h2 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;To see the saved login profiles, you use the &lt;strong&gt;list&lt;/strong&gt; command.

  &lt;img src=&#34;/img/passManager/passManagerList.png&#34;  class=&#34;left&#34;  /&gt;

In order to view the login profile&amp;rsquo;s plaintext username and password, you use the &lt;strong&gt;look&lt;/strong&gt; command. If you entered the cryptographic key used to encode the profile when entering the session, the profile will be decoded and printed out for you to view. Since &lt;strong&gt;I did not use the same crpytographic key&lt;/strong&gt; when starting this session, the login progile will not be decoded for me to view:

  &lt;img src=&#34;/img/passManager/passManagerLook.png&#34;  class=&#34;left&#34;  /&gt;

If you wanted to create a new login profile, you use the &lt;strong&gt;add&lt;/strong&gt; command. The user is first prompted to enter a name for a profile, and then enter the plaintext username and password for the profile. The user also has the option to have a password randomly generated for them!
Now, when the &lt;strong&gt;look&lt;/strong&gt; command is used on the new profile, its plaintext username and password is given since it was encoded using the &lt;strong&gt;same cryptographic key&lt;/strong&gt;.

  &lt;img src=&#34;/img/passManager/passManagerAdd.png&#34;  class=&#34;left&#34;  /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;the-textfile&#34;&gt;The Textfile&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;This script utilizes a textfile to save the encrypted profile information. Both the usernames and passwords are encrypted before being written to the file, and they are read in their encrypted form into the script when being looked up. Here is what the textfile looks like with its encrypted information:

  &lt;img src=&#34;/img/passManager/encryptedProfiles.png&#34;  class=&#34;left&#34;  /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>raspPiMediaHub (WIP)</title>
      <link>/myportfolio/petprojects/rasppimediahub/</link>
      <pubDate>Sun, 31 Oct 2021 14:42:06 -0400</pubDate>
      
      <guid>/myportfolio/petprojects/rasppimediahub/</guid>
      <description>Intro I am a huge movie and TV show buff which means I spend a lot of time with my laptop hooked up to my TV via and HDMI cord. However, constantly having to plug and unplug my sole laptop into the TV has gotten annoying&amp;hellip; so I present to you the Raspberry Pi Media Center!
It is my hope that this will be able to replace my laptop as a designated streaming box for any and all media I want to access.</description>
      <content>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;I am a huge movie and TV show buff which means I spend a lot of time with my laptop hooked up to my TV via and HDMI cord. However, constantly having to plug and unplug my sole laptop into the TV has gotten annoying&amp;hellip; so I present to you the Raspberry Pi Media Center!&lt;/p&gt;
&lt;p&gt;It is my hope that this will be able to replace my laptop as a designated streaming box for any and all media I want to access. Fortunately, I have most streaming platforms and can easily rent movies through Amazon. Assuming I can get the Pi up and running, I will soon never have to worry about forgetting my laptop and home again.&lt;/p&gt;
&lt;h2 id=&#34;the-parts&#34;&gt;The Parts&lt;/h2&gt;
&lt;p&gt;From my research for this project I decided that I would use &lt;a href=&#34;https://osmc.tv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OSMC&lt;/a&gt;
 and a Raspberry Pi 4.&lt;/p&gt;
&lt;p&gt;The choice to use OSMC was a relatively simple one. The first benefit of using OSMC is its extremely easy installation, and the second is its vibrant and active community supporting it. It is an extremely popular Pi OS, and has established itself in the community of fellow Pi heads. It also does exactly what I want it to do &amp;ndash; it mimics a media center with its own app installer and tile interface! One drawback however, is its a rather robust Pi OS (which maybe isn&amp;rsquo;t even a bad thing?) which makes it pretty cumbersome and difficult to configure or personalize. But, for my first foray into the realm of the Raspberry Pi I&amp;rsquo;m content to keep my training wheels on &amp;ndash; even if it isn&amp;rsquo;t a super lightweight.&lt;/p&gt;
&lt;p&gt;I quickly determined that a B or B+ model board would be best for me due to its ethernet port (a &lt;strong&gt;MUST&lt;/strong&gt; in my opinion), HDMI/Micro-HDMI ports, and widespread use amongst people making media hubs. After learning more about the available hardware I was deciding between the Pi 3 and Pi 4 boards. The Pi 4, while being more expensive, outpaces the Pi 3 in almost every benchmark &lt;em&gt;BUT&lt;/em&gt; is extremely hard to find in its B+ configuration due to its recent release. But, since I haven&amp;rsquo;t used a Pi before and don&amp;rsquo;t know what exactly the demand would be on the hardware, I decided to opt for the safer option and splurged on the Pi 4 B model.&lt;/p&gt;
&lt;p&gt;To complement my purchase I also bought an SD card for installing the OS, a micro-HDMI to HDMI adapter, and a cute little plastic case to keep it all safe.&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;/img/raspPiMediaHub/pi4B.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Raspberry Pi 4 B&lt;/figcaption&gt;
    
  &lt;/figure&gt;

&lt;p&gt;The parts are due to arrive this week, I can&amp;rsquo;t wait!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>caseFunFinder</title>
      <link>/myportfolio/schoolwork/casefunfinder/</link>
      <pubDate>Sun, 31 Oct 2021 13:31:56 -0400</pubDate>
      
      <guid>/myportfolio/schoolwork/casefunfinder/</guid>
      <description>Intro Intro to Databases was one of my favorite classes during my Senior year of undergrad. During the course I learnt so much about the theory behind database structures and organization which instilled in me an appreciation how our information is stored. Databases pose their own unique problems and require elegant (and often mathematically provable) solutions. This made the class extremely exciting to me and I had a lot of fun working on the final project.</description>
      <content>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Intro to Databases was one of my favorite classes during my Senior year of undergrad. During the course I learnt so much about the theory behind database structures and organization which instilled in me an appreciation how our information is stored. Databases pose their own unique problems and require elegant (and often mathematically provable) solutions. This made the class extremely exciting to me and I had a lot of fun working on the final project.&lt;/p&gt;
&lt;p&gt;My group and I decided to make CaseFunFinder &amp;ndash; a simple application that interfaced with a database of geographical attractions around our school (Case Western Reserve University). We started our project with a design phase during which we came up with a structure for organizing the type of information we wanted to store. Once we had decided on the arrangement of our data, we used SQL to create and populate our database&amp;rsquo;s tables. Then, we connected the database to a very basic React site we were running on localhost in order to demo our project.&lt;/p&gt;
&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Here is the demo of our database! (Thanks Randall &amp;lt;3)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/osVOPDL2Vms&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;design&#34;&gt;Design&lt;/h2&gt;
&lt;p&gt;The purpose of our database was to store information relevant to locations around our university and the greater Cleveland area. This posed a unique problem for us and necessitated that we come up with a clever way to organize our data. After considering a variety of solutions, we decided the most elegant way to structure our data was to categorize the locations we wanted to capture. We deliberated and elected to categorize all of our attractions into one of four groups: parks, museums/historical landmarks, theaters/performing art centers, and restaurants.&lt;/p&gt;
&lt;p&gt;By categorizing all of our location data, we were able to create an &lt;strong&gt;is-a&lt;/strong&gt; relationship within our database. That is, we created a table for each category, as well as a table with every single attraction across all categories called &lt;strong&gt;Attractions&lt;/strong&gt;. That table contained general information attractions such as its name, address, opening time, and so on.  This enabled us to store more information specific to each category within their own respective tables &amp;ndash; for instance, each restaurant has a field for whether or not it has vegetarian options!&lt;/p&gt;
&lt;p&gt;Each attraction also has a field called its &lt;strong&gt;fun id&lt;/strong&gt;, which acts as its unique identifier. The &lt;strong&gt;fun id&lt;/strong&gt; is used as a primary key and is necessary to utilize the aforementioned is-a relationship.&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;/img/caseFunFinder/erDiagram.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;ER Diagram for our database&lt;/figcaption&gt;
    
  &lt;/figure&gt;

&lt;p&gt;Our database did not stop at just attractions, however. Since it was meant to be used as part of a larger application we included a table for user information. The user table was used to store information such as the user&amp;rsquo;s name, and login information as well as a &lt;strong&gt;user id&lt;/strong&gt; which acted as a unique identifier for each user. This allowed us to expand the capability of our database when we realized we could make a relationship between users and events! This lead us to the creation of the &lt;strong&gt;Is tracking&lt;/strong&gt; and &lt;strong&gt;Is favorite&lt;/strong&gt; relationship tables which contain entries composed of two primary keys: &lt;strong&gt;user id&lt;/strong&gt; and &lt;strong&gt;fun id&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We really liked this idea of relationships between entities in different tables, we decided to take it a step further. We created an entirely new type of entity called an &lt;strong&gt;Event&lt;/strong&gt;! Events always take place at locations, so we used the structure we already had for &lt;strong&gt;attractions&lt;/strong&gt; and created a new relationship called &lt;strong&gt;Hosts&lt;/strong&gt;. Events have information such as start time and date, whether its child friendly, etc. as well as fields for event&amp;rsquo;s name AND the attraction acting as its venue.&lt;/p&gt;
&lt;h2 id=&#34;the-code&#34;&gt;The Code&lt;/h2&gt;
&lt;p&gt;We created this database using MySQL and MySQLWorkbench. Once we had decided on our structure, it was a simple matter of creating our tables and inserting into them. Here is how we created our attractions table:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Creation of attraction table&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
CREATE TABLE `attractions` (
  `fun_id` int NOT NULL,
  `attraction_name` varchar(50) NOT NULL,
  `attraction_type` varchar(30) DEFAULT NULL,
  `street_address` varchar(100) DEFAULT NULL,
  `city` varchar(30) DEFAULT NULL,
  `zip_code` int DEFAULT NULL,
  `opening_hour` int DEFAULT NULL,
  `closing_hour` int DEFAULT NULL,
  `rating` decimal(2,1) DEFAULT NULL,
  `mask_required` varchar(1) DEFAULT NULL,
  PRIMARY KEY (`fun_id`,`attraction_name`)
) 
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;Here is how we made tables that were part of an &lt;strong&gt;is-a&lt;/strong&gt; relationship with attractions. Notice the &lt;strong&gt;REFERENCES&lt;/strong&gt; field:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Creation of restaurants table&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
CREATE TABLE `restaurants` (
  `fun_id` int NOT NULL,
  `rname` varchar(50) NOT NULL,
  `owner` varchar(50) DEFAULT NULL,
  `capacity_limit` varchar(10) DEFAULT NULL,
  `vegetarian_options` varchar(1) DEFAULT NULL,
  `vegan_options` varchar(1) DEFAULT NULL,
  PRIMARY KEY (`fun_id`,`rname`),
  KEY `fun_id_idx` (`fun_id`,`rname`),
  CONSTRAINT `fun_id, rname` FOREIGN KEY (`fun_id`, `rname`) REFERENCES `attractions` (`fun_id`, `attraction_name`) ON DELETE CASCADE ON UPDATE CASCADE
) 
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;And finally, here is how we made relationships between tables. Notice how the only fields for any given entity are the primary keys of the tables it is relating:&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Creation of is_tracking table&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
CREATE TABLE `is_tracking` (
  `cwru_id` varchar(30) NOT NULL,
  `fun_id` int NOT NULL,
  `attraction_name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`cwru_id`,`fun_id`),
  KEY `cwru_id_idx` (`cwru_id`),
  KEY `attraction_fun_id, attraction_name_idx` (`fun_id`,`attraction_name`),
  CONSTRAINT `attraction_fun_id, attraction_name` FOREIGN KEY (`fun_id`, `attraction_name`) REFERENCES `attractions` (`fun_id`, `attraction_name`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `cwru_id` FOREIGN KEY (`cwru_id`) REFERENCES `users` (`cwru_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;p&gt;The relationship tables posed a lot of problems due to the number of constraints they required. It took us a while to finally figure out how to create the table properly with all of the necessary checks in place. Furthermore, the entities in this table had to reference fields in other tables, which lead to a couple of bugs due to typos.&lt;/p&gt;
&lt;h2 id=&#34;personal-accomplishments&#34;&gt;Personal Accomplishments&lt;/h2&gt;
&lt;p&gt;I really enjoyed the design phase of this project. I contributed greatly to the &lt;strong&gt;is-a&lt;/strong&gt; relationship structure of our projects, and suggested the categorizing of attractions. Once we reached development, we all worked together to get it working, but I am particularly proud of some of the more complex queries I came up with for our demo.&lt;/p&gt;
&lt;p&gt;For instance, check out this query:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;For each zip code, the user wants to find the attraction names and fun ids of attractions that host the maximum number of events; they then want the zip code, fun id, and attraction name of each such attraction listed.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;sql&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Query for above request&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-sql&#34; &gt;&lt;code&gt;
WITH 	event_count(zip_code, host_fun_id, attraction_name, ct)
		(SELECT 	A2.zip_code, H2.host_fun_id, A2.attraction_name, COUNT(DISTINCT  H2.event_being_hosted_fun_id)
        FROM 		attractions A2, Hosts H2
		WHERE 	A2.fun_id = H2.host_fun_id
		GROUP BY 	A2.zip_code, H2.host_fun_id, A2.attraction_name),
SELECT 	A1.zip_code, A1.fun_id, A1.attraction_name
FROM 	attractions A1, event_count E
WHERE 	A1.fun_id = E.host_fun_id
AND 		E.ct = (SELECT MAX	(E2.ct)
	        		FROM 		event-count E2
	       		    WHERE 	A1.zip_code = E2.zip_code)
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;h2 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h2&gt;
&lt;p&gt;I am extremely appreciative of this class due to the value of learning how to write queries in SQL. I think our professor did an excellent job in training us to use all of SQL&amp;rsquo;s weird little features, and demanded that we compose complex queries for homework and tests very often. This made me very comfortable using SQL and MySQLWorkbench and has left me very confident in my ability to query a database.&lt;/p&gt;
&lt;p&gt;Furthermore, I also learned how to do a form of set mathematics that apply to databases in order to compose queries that are mathematically provably complete! I thought this was really cool since it was a direct connection between math and computer science I had never considered.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>aboutMe</title>
      <link>/aboutme/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/aboutme/</guid>
      <description>Hi there My name is Cameron Farmer, and I would like to tell you a little bit about myself! But before I do, here are some quick links to my resume and unofficial transcript .
(From left to right) Maddie, Emily, and Me at Emily&#39;s wedding  I am a soon-to-be graduate of Case Western Reserve of University with a Bachelor&amp;rsquo;s of Science in Computer Science. My professional interests lie within the realm of Software Development &amp;ndash; I am a maker, and I desire a future career that enables me to make bigger and better applications.</description>
      <content>&lt;h1 id=&#34;hi-there&#34;&gt;Hi there&lt;/h1&gt;
&lt;p&gt;My name is Cameron Farmer, and I would like to tell you a little bit about myself! But before I
do, here are some quick links to my &lt;a href=&#34;/CF_Resume_pdf.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;resume&lt;/a&gt;
 and &lt;a href=&#34;/unofficial_transcript.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;unofficial transcript&lt;/a&gt;
.&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;/img/about/emilyWedding.jpg&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;(From left to right) Maddie, Emily, and Me at Emily&#39;s wedding&lt;/figcaption&gt;
    
  &lt;/figure&gt;

&lt;p&gt;I am a soon-to-be graduate of Case Western Reserve of University with a Bachelor&amp;rsquo;s of Science in
Computer Science. My professional interests lie within the realm of Software Development &amp;ndash; I
am a maker, and I desire a future career that enables me to make bigger and better applications.
I also have a keen interest in the field of Artificial Intelligence, and will be seeking an
appropriate Master degree program.&lt;/p&gt;
&lt;p&gt;With my graduation approaching, I have been considering my post-graduation options and have come
up with two 5-year goals to give me some direction:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Live in another country&lt;/strong&gt; and learn the native language (assuming it&amp;rsquo;s not English)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Earn a Master&amp;rsquo;s degree in machine learning&lt;/strong&gt;, preferably in an international program&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order to achieve these goals, I have been applying to both professional and academic
opportunities across the globe in countries such as Israel and Germany. I have also been giving special consideration to international companies in hopes of starting work in the United States before requesting a transfer to a foreign office.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
